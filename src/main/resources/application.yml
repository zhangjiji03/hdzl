server:
  port: 8989
spring:
  main:
    # 设置为true时，后定义的bean会覆盖之前定义的相同名称的bean
    allow-bean-definition-overriding: true
  application: AiBoatApi

  datasource:
    druid:
      driver-class-name: com.mysql.cj.jdbc.Driver
      url: jdbc:mysql://localhost:3306/zz?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=GMT&allowPublicKeyRetrieval=true
      username: root
      password: a111
      # 初始化连接数
      initial-size: 10
      # 最小空闲连接
      min-idle: 5
      # 最大连接数
      max-active: 20
      # 最大等待时间
      max-wait: 3000
      # 指明是否从池中取出连接前进行校验，校验失败则从池中去除并尝试获取另一个
      test-on-borrow: true
      # 指明是否归还到池中需要校验
      test-on-return: false
      # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除
      test-while-idle: false
      # 属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
      # 监控统计用的filter:stat
      # 日志用的filter:log4j
      # 防御sql注入的filter:wall
      filters: stat,wall
      filter:
        stat:
          enabled: true
          db-type: mysql
          log-slow-sql: true
          slow-sql-millis: 1
      # url监控
      web-stat-filter:
        enabled: true
        # 启用session统计
        session-stat-enable: true
        # 经常需要排除一些不必要的url，比如*.js,/jslib/*等等
        exclusions:
          - "*.js"
          - "*.gif"
          - "*.jpg"
          - "*.png"
          - "*.css"
          - "*.ico"
          - "/druid/*"
      # 监控信息   localhost:${server.port}/druid/login.html
      stat-view-servlet:
        # sql监控开关
        enabled: true
        allow: ""
        url-pattern: /druid/*
        login-username: zz
        login-password: zz
        reset-enable: false
  redis:
    database: 0
    host: 39.104.90.123
    password: 123456
    port: 6379
    timeout: 1200
    pool:
      max-active: 8
      max-idle: 8
      max-wait: -1
      min-idle: 0
  mvc:
    static-path-pattern: /static/**

mybatis-plus:
  global-config:
    db-config:
      # 全局默认主键类型
      id-type: auto
    field-strategy: not_empty
    #驼峰下划线转换
    column-underline: true
    #逻辑删除配置
    logic-delete-value: 0
    logic-not-delete-value: 1
    db-type: mysql
    # 是否控制台 print mybatis-plus 的 LOGO ,默认true
    banner: true
  configuration:
    # 是否开启自动驼峰命名规则（camel case）映射，即从经典数据库列名 A_COLUMN（下划线命名） 到经典 Java 属性名 aColumn（驼峰命名） 的类似映射。
    map-underscore-to-camel-case: true
    # 开启Mybatis二级缓存，默认为 true
    cache-enabled: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

    # Mybatis一级缓存，默认为 SESSION。SESSION session级别缓存，同一个session相同查询语句不会再次查询数据库
    # STATEMENT 关闭一级缓存
    # 单服务架构中（有且仅有只有一个程序提供相同服务），一级缓存开启不会影响业务，只会提高性能。 微服务架构中需要关闭一级缓存，原因：Service1先查询数据，若之后Service2修改了数据，之后Service1又再次以同样的查询条件查询数据，因走缓存会出现查处的数据不是最新数据
    # local-cache-scope: session
  # MyBatis Mapper 所对应的 XML 文件位置
  mapper-locations: classpath*:mapping/*Mapping.xml
  # MyBaits 别名包扫描路径，通过该属性可以给包中的类注册别名，注册后在 Mapper 对应的 XML 文件中可以直接使用类名，而不用使用全限定的类名(即 XML 中调用的时候不用包含包名
  # type-aliases-package:
  # 启动时是否检查 MyBatis XML 文件的存在，默认不检查
  check-config-location: false

# mybatis-plus输出日志
logging:
  level:
    com.baomidou.mybatisplus.samples: debug

# 设置token过期时间s
outTime: 30000


